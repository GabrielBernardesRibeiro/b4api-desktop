name: 🚀 Build & Release Electron App

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    env:
      NODE_ENV: production
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VERSION: ${{ github.ref_name }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: 📦 Install dependencies
        run: yarn install

      - name: 🔍 Ensure cross-env is available
        run: yarn add cross-env --dev

      - name: 🔍 Ensure tailwind @tailwindcss/postcss and postcss is available
        run: yarn add tailwindcss @tailwindcss/postcss postcss --dev

      - name: 🛠️ Build (Next.js + Electron)
        run: yarn build
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: 📂 List build outputs
        run: ls -R dist

      - name: 🔐 Generate checksums and create Setup zip
        shell: pwsh
        run: |
          Write-Host "🔄 Iniciando processo de checksum e criação de zip..."

          # Garantir que a pasta dist exista
          New-Item -ItemType Directory -Force -Path dist | Out-Null

          # 1. Encontrar e gerar checksum do arquivo *-win.zip
          Write-Host "`n📦 Procurando arquivo '*-win.zip'..."
          $zipFile = Get-ChildItem -Path dist -Filter "*-win.zip" | Select-Object -First 1
          if ($zipFile) {
            Write-Host "✅ Arquivo encontrado: $($zipFile.Name)"
            Write-Host "🔐 Gerando checksum SHA256 para '$($zipFile.Name)'..."
            $checksum = Get-FileHash -Path $zipFile.FullName -Algorithm SHA256
            Set-Content -Path "$($zipFile.FullName).checksum.txt" -Value $checksum.Hash
            Write-Host "✅ Checksum gerado: $($checksum.Hash)"
            Write-Host "📄 Arquivo de saída: $($zipFile.Name).checksum.txt"
          } else {
            Write-Host "⚠️ Nenhum arquivo '*-win.zip' encontrado!"
          }

          # 2. Encontrar o arquivo setup .exe e zipá-lo
          Write-Host "`n📦 Procurando arquivo 'B4Api Setup *.exe'..."
          $setupExe = Get-ChildItem -Path dist -Filter "B4Api Setup *.exe" | Select-Object -First 1
          if ($setupExe) {
            Write-Host "✅ Arquivo encontrado: $($setupExe.Name)"
            $setupZip = Join-Path $setupExe.Directory.FullName "B4Api Setup.zip"
            Write-Host "🗜️ Criando arquivo zip: 'B4Api Setup.zip' com $($setupExe.Name)..."
            Compress-Archive -Path $setupExe.FullName -DestinationPath $setupZip -Force
            Write-Host "✅ Zip criado: B4Api Setup.zip"

            # 3. Gerar checksum do novo zip
            Write-Host "🔐 Gerando checksum SHA256 para 'B4Api Setup.zip'..."
            $setupChecksum = Get-FileHash -Path $setupZip -Algorithm SHA256
            Set-Content -Path "$setupZip.checksum.txt" -Value $setupChecksum.Hash
            Write-Host "✅ Checksum gerado: $($setupChecksum.Hash)"
            Write-Host "📄 Arquivo de saída: B4Api Setup.zip.checksum.txt"
          } else {
            Write-Host "⚠️ Nenhum arquivo 'B4Api Setup *.exe' encontrado!"
          }

          Write-Host "`n✅ Processo finalizado com sucesso."

      - name: 🚢 Upload release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: 📦 Release ${{ env.VERSION }}
          body: |
            🔄 Automatic release for `${{ env.VERSION }}`

            - OS: ${{ matrix.os }}
            - Built from: ${{ github.repository }}
            - Triggered by: ${{ github.actor }}
          files: |
            dist/**/*.exe
            dist/**/*.zip
            dist/**/*checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
